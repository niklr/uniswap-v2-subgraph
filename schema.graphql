type UniswapFactory @entity {
  # factory address
  id: ID!

  # pair info
  pairCount: Int!
}

type Token @entity {
  # token address
  id: ID!

  # mirrored from the smart contract
  symbol: String!
  name: String!
  decimals: BigInt!
}

type Pair @entity {
  # pair address
  id: ID!

  # mirrored from the smart contract
  token0: Token!
  token1: Token!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!

  # creation stats
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}

type Event @entity {
  id: ID!
  pair: Pair!
  timestamp: BigInt!
  blocknumber: BigInt!
  type: EventType!
  reserve0_before: BigDecimal!
  reserve0_after: BigDecimal!
  reserve1_before: BigDecimal!
  reserve1_after: BigDecimal!
  swap0_in: BigDecimal
  swap0_out: BigDecimal
  swap1_in: BigDecimal
  swap1_out: BigDecimal
  deposit0: BigDecimal
  deposit1: BigDecimal
  withdraw0: BigDecimal
  withdraw1: BigDecimal
}

enum EventType {  
  Mint
  Burn
  Swap
}